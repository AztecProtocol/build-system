#!/bin/bash
# Lists files that have changed between two commits, including files in submodules.
# Needed because `git diff --submodule=diff --name-only` doesn't work as one would hope.
set -euo pipefail

BASE_COMMIT=$1
COMMIT_HASH=${2:-HEAD}

if [ -z "$BASE_COMMIT" ]; then
  echo "Usage $0 from_commit [to_commit]"
  exit 1
fi

cd $ROOT_PATH

echo "Listing file diff between $BASE_COMMIT and $COMMIT_HASH"
git --no-pager diff --name-only ${BASE_COMMIT} ${COMMIT_HASH}

echo "iterating over submodules"
echo "Specifically $(git config --file .gitmodules --get-regexp path | awk '{ print $2 }')"
echo "starting..."

for SUBMODULE_PATH in $(git config --file .gitmodules --get-regexp path | awk '{ print $2 }'); do
  echo "Checking submodule $SUBMODULE_PATH"
  [ -f $SUBMODULE_PATH/.git ] || continue
  echo "doing an ls-tree..."
  echo "git ls-tree: $(git ls-tree $BASE_COMMIT $SUBMODULE_PATH | awk '{print $2}')"
  if [ "$(git ls-tree $BASE_COMMIT $SUBMODULE_PATH | awk '{print $2}')" = "tree" ]; then
    # In the base commit, we were not a submodule, and now we are. Output all files as having changed.
    pushd $SUBMODULE_PATH > /dev/null
    echo "doing an ls-files..."
    git ls-files | awk "\$0=\"$SUBMODULE_PATH/\"\$0"
    echo "done on that..."
    popd > /dev/null
    continue
  fi
  echo "more ls-tees..."
  SM_PREV_HASH=$(git ls-tree $BASE_COMMIT $SUBMODULE_PATH | awk '{print $3}')
  SM_CURR_HASH=$(git ls-tree $COMMIT_HASH $SUBMODULE_PATH | awk '{print $3}')
  echo "pushd $SUBMODULE_PATH"
  pushd $SUBMODULE_PATH > /dev/null
  echo "diffing"
  echo "diffing: $(git --no-pager diff --name-only ${SM_PREV_HASH} ${SM_CURR_HASH})"
  git --no-pager diff --name-only ${SM_PREV_HASH} ${SM_CURR_HASH} | awk "\$0=\"$SUBMODULE_PATH/\"\$0"
  echo "done iter"
  popd > /dev/null
done
echo "done list_file_diff"
